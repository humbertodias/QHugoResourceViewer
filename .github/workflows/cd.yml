name: CD

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
        
jobs:
  linux:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ubuntu-22.04]
#        runner: [ubuntu-22.04, ubuntu-24.04-arm]
        #22.04 = glibc 2.35
        #24.04 = glibc 2.39
        #24.10 = glibc 2.40

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y qt6-base-dev qt6-tools-dev qt6-multimedia-dev libglu1-mesa-dev make cmake ninja-build patchelf rsync wget autoconf automake autoconf-archive libxcb*-dev libxkbcommon-x11-dev nasm

      - name: Build
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release -G Ninja -DCPACK_GENERATOR=TGZ
          cmake --build build --target package
          mv build/hugo-resource-viewer-*.tar.gz hugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.tar.gz

      - name: Create release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          files: hugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.tar.gz

      - name: Upload release asset
        uses: actions/upload-artifact@v4
        with:
          name: hugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}
          path: hugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.tar.gz

  macOS:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [macos-latest]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Dependencies
        run: |
          brew install qt cmake ninja

      - name: Build
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release -G Ninja -DCPACK_GENERATOR=DragNDrop
          cmake --build build --target package
          sudo xattr -rd com.apple.quarantine build/hugo-resource-viewer.app
          mv build/hugo-resource-viewer-*.dmg hugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.dmg

      - name: Create release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          files: hugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.dmg

      - name: Upload release asset
        uses: actions/upload-artifact@v4
        with:
          name: hugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}
          path: hugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.dmg

  windows:
   runs-on: ${{ matrix.runner }}
   strategy:
     matrix:
       runner: [windows-latest]

   steps:
     - name: Check out code
       uses: actions/checkout@v4
       with:
         submodules: recursive

     - name: Install Dependencies
       run: |
         choco install -y cmake

     - name: Install Qt
       uses: jurplel/install-qt-action@v4
       with:
         version: 6.4.2
         host: "windows"
         target: "desktop"
         modules: "qtmultimedia"
         dir: "${{ github.workspace }}/qt/"
         install-deps: "true"

     - name: Build
       run: |
         cmake -B build -DCMAKE_BUILD_TYPE=Debug -DCPACK_GENERATOR=ZIP
         cmake --build build
         mv build/Debug/hugo-resource-viewer-*.zip hugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.zip
       env:
        CMAKE_PREFIX_PATH: "${{ env.QT_ROOT_DIR }}/lib/cmake"
        WORKSPACE_DIR: ${{ github.workspace }}

     - name: Create release
       if: success()
       uses: softprops/action-gh-release@v2
       with:
         files: hugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.zip

     - name: Upload release asset
       uses: actions/upload-artifact@v4
       with:
         name: hugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}
         path: hugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.zip
