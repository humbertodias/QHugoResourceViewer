name: CD

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
        
jobs:
  linux:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ubuntu-latest]
#        runner: [ubuntu-22.04, ubuntu-24.04-arm]
        #22.04 = glibc 2.35
        #24.04 = glibc 2.39
        #24.10 = glibc 2.40

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y qt6-base-dev qt6-tools-dev qt6-multimedia-dev libglu1-mesa-dev make cmake ninja-build patchelf rsync

      - name: Build
        run: make -f makefile.linux build

      - name: Build AppImage
        run: | 
          make -f makefile.linux prepare_appdir fetch_appimage build_appimage
          mv QHugoResourceViewer-*.AppImage qhugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.AppImage

      - name: Create release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          files: qhugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.AppImage

      - name: Upload release asset
        uses: actions/upload-artifact@v4
        with:
          name: qhugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}
          path: qhugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.AppImage

  macOS:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [macos-latest]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          brew install qt cmake ninja

      - name: Build
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release -G Ninja
          cmake --build build

      - name: Compress binaries
        run: |
          tar -czf qhugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.tar.gz -C build QHugoResourceViewer.app

      - name: Create release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          files: qhugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.tar.gz

      - name: Upload release asset
        uses: actions/upload-artifact@v4
        with:
          name: qhugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}
          path: qhugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.tar.gz

  windows:
   runs-on: ${{ matrix.runner }}
   strategy:
     matrix:
       runner: [windows-latest]

   steps:
     - name: Check out code
       uses: actions/checkout@v4

     - name: Install Dependencies
       run: |
         choco install -y cmake

     - name: Install Qt
       uses: jurplel/install-qt-action@v4
       with:
         version: 6.4.2
         host: "windows"
         target: "desktop"
         modules: "qtmultimedia"
         dir: "${{ github.workspace }}/qt/"
         install-deps: "true"

     - name: Build
       run: |
         cmake -B build -DCMAKE_BUILD_TYPE=Debug
         cmake --build build
       env:
        CMAKE_PREFIX_PATH: "${{ env.QT_ROOT_DIR }}/lib/cmake"
        WORKSPACE_DIR: ${{ github.workspace }}

     - name: Compress binaries (ZIP)
       run: |
         cd build\Debug
         7z a ..\..\qhugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.zip *.exe

     - name: Create release
       if: success()
       uses: softprops/action-gh-release@v2
       with:
         files: qhugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.zip

     - name: Upload release asset
       uses: actions/upload-artifact@v4
       with:
         name: qhugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}
         path: qhugo-resource-viewer-${{ runner.os }}-${{ runner.arch }}.zip
