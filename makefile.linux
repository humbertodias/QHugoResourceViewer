APP_NAME  := hugo-resource-viewer
ARCH      := $(shell uname -m)
OS        := $(shell uname -s)
BUILD_DIR := build
APPDIR    := $(BUILD_DIR)/AppDir
CMAKE_BUILD_TYPE := Release

APPIMAGE_URL      := https://github.com/probonopd/go-appimage/releases/expanded_assets/continuous
APPIMAGE_TOOL_URL := https://github.com/$(shell wget -q $(APPIMAGE_URL) -O - | grep "appimagetool-.*-$(ARCH).AppImage" | head -n 1 | cut -d '"' -f 2)
APPIMAGE_TOOL     := appimagetool-$(ARCH).AppImage
APPIMAGE_PATH     := $(BUILD_DIR)/$(APPIMAGE_TOOL)

CMAKE := $(shell which cmake)
MAKE  := $(shell which make)
CC    := $(shell which gcc)
CXX   := $(shell which g++)

.PHONY: all build prepare_appdir create_apprun create_desktop fetch_appimage build_appimage clean

# Main target
all: build

build:
	$(CMAKE) -S . -B $(BUILD_DIR) \
		-DCMAKE_BUILD_TYPE=$(CMAKE_BUILD_TYPE) \
		-DCMAKE_BUILD_WITH_INSTALL_RPATH=ON \
		-DCMAKE_TOOLCHAIN_FILE=$(PWD)/vcpkg/scripts/buildsystems/vcpkg.cmake \
		-DCMAKE_MAKE_PROGRAM=$(MAKE) \
		-DCMAKE_C_COMPILER=$(CC) \
		-DCMAKE_CXX_COMPILER=$(CXX)
	$(CMAKE) --build $(BUILD_DIR)

prepare_appdir:
	cp -r misc/$(OS)/AppDir $(APPDIR)
	mkdir -p $(APPDIR)/usr/bin
	cp $(BUILD_DIR)/$(APP_NAME) $(APPDIR)/usr/bin/exec
	$(MAKE) copy_qtlibs
	$(MAKE) rpath_libs

fetch_appimage:
	wget -c $(APPIMAGE_TOOL_URL) -O $(APPIMAGE_PATH)
	chmod +x $(APPIMAGE_PATH)

build_appimage:
	ARCH=$(ARCH) ./$(APPIMAGE_PATH) $(APPDIR)

copy_qtlibs:
	mkdir -p $(APPDIR)/usr/lib
	ldd $(APPDIR)/usr/bin/exec | awk '{print $$3}' | while read lib; do \
	  rsync -avL $$lib $(APPDIR)/usr/lib/; \
	done

rpath_libs:
	patchelf --set-rpath '$$ORIGIN/../lib' $(APPDIR)/usr/bin/exec

clean:
	rm -rf $(BUILD_DIR) $(APPIMAGE_TOOL) $(APP_NAME)-$(ARCH).AppImage
